rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Allow users to read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }
    
    // Allow anyone to read public data (like projects, activities, gallery)
    match /projects/{document=**} {
      allow read: if true;
      allow write: if request.auth.uid != null && hasRole(request.auth.uid, 'admin');
    }
    
    match /activities/{document=**} {
      allow read: if true;
      allow write: if request.auth.uid != null && hasRole(request.auth.uid, 'admin');
    }
    
    match /gallery/{document=**} {
      allow read: if true;
      allow write: if request.auth.uid != null && hasRole(request.auth.uid, 'admin');
    }
    
    match /team/{document=**} {
      allow read: if true;
      allow write: if request.auth.uid != null && hasRole(request.auth.uid, 'admin');
    }
    
    // Allow users to read their own field visits
    match /fieldVisits/{visitId} {
      allow read: if request.auth.uid == resource.data.userId || hasRole(request.auth.uid, 'admin');
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth.uid == resource.data.userId || hasRole(request.auth.uid, 'admin');
    }
    
    // Allow authenticated users to read and write to their participation records
    match /participations/{participationId} {
      allow read: if request.auth.uid == resource.data.userId || hasRole(request.auth.uid, 'admin');
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth.uid == resource.data.userId || hasRole(request.auth.uid, 'admin');
    }
    
    // Contact form submissions - allow anyone to create, admins to read/delete
    match /contacts/{document=**} {
      allow create: if true;
      allow read, delete: if request.auth.uid != null && hasRole(request.auth.uid, 'admin');
    }
    
    // Notifications - allow users to read their own
    match /notifications/{notificationId} {
      allow read: if request.auth.uid == resource.data.userId;
      allow create, delete: if request.auth.uid != null && hasRole(request.auth.uid, 'admin');
    }
  }
  
  // Helper function to check if user is admin
  function hasRole(userId, role) {
    return get(/databases/$(database)/documents/users/$(userId)).data.role == role;
  }
}
